### Bangels : Deduce a sectreat three-digit number based on clues.

import random
NUM_DIGITS = 3
MAX_GUSSES = 10

def main():
    print('''Bangles, a deductive logic game.
    I am thinking of a {}-digit number with no repeated digits.
    try to guess whaat it is. here are some clues:
    When i say:
    Pico  :: One digit is correct but in wrong position.
    Fermi :: One digit is correct but in right position
    Bangles: No digit is correct.'''.format(NUM_DIGITS))

    while True:
        secretNum = getSecretNum()
        print('I have thought up a number.')
        print('you have {} gusses to get it.'.format(MAX_GUSSES))

        numGusses = 1
        while numGusses <= MAX_GUSSES:
            guess = ''
            while len(guess) != NUM_DIGITS or not guess.isdecimal():
                print('Guess #{}'.format(numGusses))
                guess = input('> ')

            clues = getClues(guess, secretNum)
            print(clues)
            numGusses += 1

            if guess == secretNum:
                break
            if numGusses > MAX_GUSSES:
                print('You ran out of guesses.')
                print('The answer was{}.'.format(secretNum))
            
        print("Do you want to play again? (yes or no )")
        if not input('> ').lower.startswith('y'):
            break
    print("Thanks for playing! ")

def getSecretNum():
    numbers = list('0123456789')
    random.shuffle(numbers)

    secretNum = ''
    for i in range(NUM_DIGITS):
        secretNum += str(numbers[i])
    return secretNum

def getClues(guess, secretNum):

    if guess == secretNum:
        return 'You got it!'
    
    clues =[]

    for i in range(len(guess)):
        if guess[i] == secretNum[i]:
            clues.append('Fermi')
        elif guess[i] in secretNum:
            clues.append("Pico")
    if len(clues) == 0:
        return 'Bagles'
    else:
        clues.sort()
        return ' '.join(clues)

if __name__ == '__main__':
    main()                                                        
